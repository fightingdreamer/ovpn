* cipher
  https://community.openvpn.net/openvpn/wiki/CipherNegotiation

* easyrsa
  https://github.com/OpenVPN/easy-rsa/blob/master/README.quickstart.md
  https://easy-rsa.readthedocs.io/en/latest/

* openvpn.config matches command line
  https://linux.die.net/man/8/openvpn

* main config options
  https://github.com/OpenVPN/openvpn/blob/master/doc/man-sections/

* embed certs in openvpn.conf
  https://github.com/OpenVPN/openvpn/blob/master/doc/man-sections/inline-files.rst

* alpine guide to easyrsa
  https://wiki.alpinelinux.org/wiki/Setting_up_a_OpenVPN_server

* nixos integration
  https://nixos.wiki/wiki/OpenVPN

* podman extra options
  --cap-add=NET_RAW \
  --cap-add=NET_ADMIN \
  --cap-add=SYS_MODULE \
  --sysctl="net.ipv4.conf.all.src_valid_mark=1" \
  --sysctl="net.ipv4.conf.all.forwarding=1" \

* loop command
  #!/bin/sh

  delay=$1
  shift
  command=$@

  true
  while test "$?" -eq 0
  do
    eval "$command" && sleep $delay || sleep $delay
  done

* container debug tmux
  name="host"
  host_ip="172.16.0.1"
  peer_ip="172.16.0.2"

  tmux new -s "$name" -d -x "$(tput cols)" -y "$(tput lines)"
  tmux split-window -v -t "$name:0" -l 50%
  tmux split-window -h -t "$name:0.0" -l 50%
  tmux split-window -v -t "$name:0.0" -l 50%

  tmux send-keys -t "$name:0.0" \
      "loop 3 'ping -q -c1 -W1 $peer_ip && mtr $peer_ip --no-dns --displaymode 1 --interval 0.2'" Enter \
      \;
  tmux send-keys -t "$name:0.1" \
      "loop 1 'iperf3 -s'" Enter \
      \;
  tmux send-keys -t "$name:0.2" \
      "" Enter \
      \;
  tmux send-keys -t "$name:0.3" \
      "sh ./bin/openvpn.sh" Enter \
      \;

  tmux select-pane -t "$name:0.2"

  exec tmux attach-session -t "$name"
